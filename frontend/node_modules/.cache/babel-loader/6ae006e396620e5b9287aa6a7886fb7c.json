{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\src\\\\components\\\\QuizView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/QuizView.css';\nvar questionsPerPlay = 5;\n\nvar QuizView = /*#__PURE__*/function (_Component) {\n  _inherits(QuizView, _Component);\n\n  function QuizView(props) {\n    var _this;\n\n    _classCallCheck(this, QuizView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizView).call(this));\n\n    _this.selectCategory = function (_ref) {\n      var type = _ref.type,\n          _ref$id = _ref.id,\n          id = _ref$id === void 0 ? 0 : _ref$id;\n\n      _this.setState({\n        quizCategory: {\n          type: type,\n          id: id\n        }\n      }, _this.getNextQuestion);\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.getNextQuestion = function () {\n      var previousQuestions = _toConsumableArray(_this.state.previousQuestions);\n\n      if (_this.state.currentQuestion.id) {\n        previousQuestions.push(_this.state.currentQuestion.id);\n      }\n\n      $.ajax({\n        url: '/quizzes',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          previous_questions: previousQuestions,\n          quiz_category: _this.state.quizCategory\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: function success(result) {\n          _this.setState({\n            showAnswer: false,\n            previousQuestions: previousQuestions,\n            currentQuestion: result.question,\n            guess: '',\n            forceEnd: result.question ? false : true\n          });\n\n          return;\n        },\n        error: function error(_error) {\n          alert('Unable to load question. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    _this.submitGuess = function (event) {\n      event.preventDefault();\n\n      var formatGuess = _this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").toLowerCase();\n\n      var evaluate = _this.evaluateAnswer();\n\n      _this.setState({\n        numCorrect: !evaluate ? _this.state.numCorrect : _this.state.numCorrect + 1,\n        showAnswer: true\n      });\n    };\n\n    _this.restartGame = function () {\n      _this.setState({\n        quizCategory: null,\n        previousQuestions: [],\n        showAnswer: false,\n        numCorrect: 0,\n        currentQuestion: {},\n        guess: '',\n        forceEnd: false\n      });\n    };\n\n    _this.evaluateAnswer = function () {\n      var formatGuess = _this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").toLowerCase();\n\n      var answerArray = _this.state.currentQuestion.answer.toLowerCase().split(' ');\n\n      return answerArray.every(function (el) {\n        return formatGuess.includes(el);\n      });\n    };\n\n    _this.state = {\n      quizCategory: null,\n      previousQuestions: [],\n      showAnswer: false,\n      categories: {},\n      numCorrect: 0,\n      currentQuestion: {},\n      guess: '',\n      forceEnd: false\n    };\n    return _this;\n  }\n\n  _createClass(QuizView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      $.ajax({\n        url: \"/categories\",\n        //TODO: update request URL\n        type: \"GET\",\n        success: function success(result) {\n          _this2.setState({\n            categories: result.categories\n          });\n\n          return;\n        },\n        error: function error(_error2) {\n          alert('Unable to load categories. Please try your request again');\n          return;\n        }\n      });\n    }\n  }, {\n    key: \"renderPrePlay\",\n    value: function renderPrePlay() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quiz-play-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"choose-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, \"Choose Category\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"play-category\",\n        onClick: this.selectCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, \"ALL\"), Object.keys(this.state.categories).map(function (id) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: id,\n          value: id,\n          className: \"play-category\",\n          onClick: function onClick() {\n            return _this3.selectCategory({\n              type: _this3.state.categories[id],\n              id: id\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, _this3.state.categories[id]);\n      })));\n    }\n  }, {\n    key: \"renderFinalScore\",\n    value: function renderFinalScore() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quiz-play-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"final-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, \" Your Final Score is \", this.state.numCorrect), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"play-again button\",\n        onClick: this.restartGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, \" Play Again? \"));\n    }\n  }, {\n    key: \"renderCorrectAnswer\",\n    value: function renderCorrectAnswer() {\n      var formatGuess = this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").toLowerCase();\n      var evaluate = this.evaluateAnswer();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quiz-play-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quiz-question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, this.state.currentQuestion.question), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(evaluate ? 'correct' : 'wrong'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, evaluate ? \"You were correct!\" : \"You were incorrect\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quiz-answer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, this.state.currentQuestion.answer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"next-question button\",\n        onClick: this.getNextQuestion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, \" Next Question \"));\n    }\n  }, {\n    key: \"renderPlay\",\n    value: function renderPlay() {\n      return this.state.previousQuestions.length === questionsPerPlay || this.state.forceEnd ? this.renderFinalScore() : this.state.showAnswer ? this.renderCorrectAnswer() : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quiz-play-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quiz-question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, this.state.currentQuestion.question), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.submitGuess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"guess\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"submit-guess button\",\n        type: \"submit\",\n        value: \"Submit Answer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.quizCategory ? this.renderPlay() : this.renderPrePlay();\n    }\n  }]);\n\n  return QuizView;\n}(Component);\n\nexport default QuizView;","map":{"version":3,"sources":["C:/Users/Apps/FSND-master/projects/git/starter/frontend/src/components/QuizView.js"],"names":["React","Component","$","questionsPerPlay","QuizView","props","selectCategory","type","id","setState","quizCategory","getNextQuestion","handleChange","event","target","name","value","previousQuestions","state","currentQuestion","push","ajax","url","dataType","contentType","data","JSON","stringify","previous_questions","quiz_category","xhrFields","withCredentials","crossDomain","success","result","showAnswer","question","guess","forceEnd","error","alert","submitGuess","preventDefault","formatGuess","replace","toLowerCase","evaluate","evaluateAnswer","numCorrect","restartGame","answerArray","answer","split","every","el","includes","categories","Object","keys","map","length","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/QuizView.css';\n\nconst questionsPerPlay = 5; \n\nclass QuizView extends Component {\n  constructor(props){\n    super();\n    this.state = {\n        quizCategory: null,\n        previousQuestions: [], \n        showAnswer: false,\n        categories: {},\n        numCorrect: 0,\n        currentQuestion: {},\n        guess: '',\n        forceEnd: false\n    }\n  }\n\n  componentDidMount(){\n    $.ajax({\n      url: `/categories`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ categories: result.categories })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  selectCategory = ({type, id=0}) => {\n    this.setState({quizCategory: {type, id}}, this.getNextQuestion)\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  getNextQuestion = () => {\n    const previousQuestions = [...this.state.previousQuestions]\n    if(this.state.currentQuestion.id) { previousQuestions.push(this.state.currentQuestion.id) }\n\n    $.ajax({\n      url: '/quizzes', //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        previous_questions: previousQuestions,\n        quiz_category: this.state.quizCategory\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          showAnswer: false,\n          previousQuestions: previousQuestions,\n          currentQuestion: result.question,\n          guess: '',\n          forceEnd: result.question ? false : true\n        })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load question. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  submitGuess = (event) => {\n    event.preventDefault();\n    const formatGuess = this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").toLowerCase()\n    let evaluate =  this.evaluateAnswer()\n    this.setState({\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\n      showAnswer: true,\n    })\n  }\n\n  restartGame = () => {\n    this.setState({\n      quizCategory: null,\n      previousQuestions: [], \n      showAnswer: false,\n      numCorrect: 0,\n      currentQuestion: {},\n      guess: '',\n      forceEnd: false\n    })\n  }\n\n  renderPrePlay(){\n      return (\n          <div className=\"quiz-play-holder\">\n              <div className=\"choose-header\">Choose Category</div>\n              <div className=\"category-holder\">\n                  <div className=\"play-category\" onClick={this.selectCategory}>ALL</div>\n                  {Object.keys(this.state.categories).map(id => {\n                  return (\n                    <div\n                      key={id}\n                      value={id}\n                      className=\"play-category\"\n                      onClick={() => this.selectCategory({type:this.state.categories[id], id})}>\n                      {this.state.categories[id]}\n                    </div>\n                  )\n                })}\n              </div>\n          </div>\n      )\n  }\n\n  renderFinalScore(){\n    return(\n      <div className=\"quiz-play-holder\">\n        <div className=\"final-header\"> Your Final Score is {this.state.numCorrect}</div>\n        <div className=\"play-again button\" onClick={this.restartGame}> Play Again? </div>\n      </div>\n    )\n  }\n\n  evaluateAnswer = () => {\n    const formatGuess = this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").toLowerCase()\n    const answerArray = this.state.currentQuestion.answer.toLowerCase().split(' ');\n    return answerArray.every(el => formatGuess.includes(el));\n  }\n\n  renderCorrectAnswer(){\n    const formatGuess = this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").toLowerCase()\n    let evaluate =  this.evaluateAnswer()\n    return(\n      <div className=\"quiz-play-holder\">\n        <div className=\"quiz-question\">{this.state.currentQuestion.question}</div>\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>{evaluate ? \"You were correct!\" : \"You were incorrect\"}</div>\n        <div className=\"quiz-answer\">{this.state.currentQuestion.answer}</div>\n        <div className=\"next-question button\" onClick={this.getNextQuestion}> Next Question </div>\n      </div>\n    )\n  }\n\n  renderPlay(){\n    return this.state.previousQuestions.length === questionsPerPlay || this.state.forceEnd\n      ? this.renderFinalScore()\n      : this.state.showAnswer \n        ? this.renderCorrectAnswer()\n        : (\n          <div className=\"quiz-play-holder\">\n            <div className=\"quiz-question\">{this.state.currentQuestion.question}</div>\n            <form onSubmit={this.submitGuess}>\n              <input type=\"text\" name=\"guess\" onChange={this.handleChange}/>\n              <input className=\"submit-guess button\" type=\"submit\" value=\"Submit Answer\" />\n            </form>\n          </div>\n        )\n  }\n\n\n  render() {\n    return this.state.quizCategory\n        ? this.renderPlay()\n        : this.renderPrePlay()\n  }\n}\n\nexport default QuizView;\n"]},"metadata":{},"sourceType":"module"}