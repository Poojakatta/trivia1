{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Apps\\\\FSND-master\\\\projects\\\\git\\\\starter\\\\frontend\\\\src\\\\components\\\\QuestionView.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nvar QuestionView = /*#__PURE__*/function (_Component) {\n  _inherits(QuestionView, _Component);\n\n  function QuestionView() {\n    var _this;\n\n    _classCallCheck(this, QuestionView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionView).call(this));\n\n    _this.getQuestions = function () {\n      $.ajax({\n        url: \"/questions?page=\".concat(_this.state.page),\n        //TODO: update request URL\n        type: \"GET\",\n        success: function success(result) {\n          _this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            categories: result.categories,\n            currentCategory: result.current_category\n          });\n\n          return;\n        },\n        error: function error(_error) {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    _this.getByCategory = function (id) {\n      $.ajax({\n        url: \"/categories/\".concat(id, \"/questions\"),\n        //TODO: update request URL\n        type: \"GET\",\n        success: function success(result) {\n          _this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n\n          return;\n        },\n        error: function error(_error2) {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    _this.submitSearch = function (searchTerm) {\n      $.ajax({\n        url: \"/questions\",\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          searchTerm: searchTerm\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: function success(result) {\n          _this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n\n          return;\n        },\n        error: function error(_error3) {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    _this.questionAction = function (id) {\n      return function (action) {\n        if (action === 'DELETE') {\n          if (window.confirm('are you sure you want to delete the question?')) {\n            $.ajax({\n              url: \"/questions/\".concat(id),\n              //TODO: update request URL\n              type: \"DELETE\",\n              success: function success(result) {\n                _this.getQuestions();\n              },\n              error: function error(_error4) {\n                alert('Unable to load questions. Please try your request again');\n                return;\n              }\n            });\n          }\n        }\n      };\n    };\n\n    _this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null\n    };\n    return _this;\n  }\n\n  _createClass(QuestionView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getQuestions();\n    }\n  }, {\n    key: \"selectPage\",\n    value: function selectPage(num) {\n      var _this2 = this;\n\n      this.setState({\n        page: num\n      }, function () {\n        return _this2.getQuestions();\n      });\n    }\n  }, {\n    key: \"createPagination\",\n    value: function createPagination() {\n      var _this3 = this;\n\n      var pageNumbers = [];\n      var maxPage = Math.ceil(this.state.totalQuestions / 10);\n\n      var _loop = function _loop(i) {\n        pageNumbers.push( /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          className: \"page-num \".concat(i === _this3.state.page ? 'active' : ''),\n          onClick: function onClick() {\n            _this3.selectPage(i);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }, i));\n      };\n\n      for (var i = 1; i <= maxPage; i++) {\n        _loop(i);\n      }\n\n      return pageNumbers;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"categories-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        onClick: function onClick() {\n          _this4.getQuestions();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, \"Categories\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, Object.keys(this.state.categories).map(function (id) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: id,\n          onClick: function onClick() {\n            _this4.getByCategory(id);\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }\n        }, _this4.state.categories[id], /*#__PURE__*/React.createElement(\"img\", {\n          className: \"category\",\n          src: \"\".concat(_this4.state.categories[id].toLowerCase(), \".svg\"),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(Search, {\n        submitSearch: this.submitSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"questions-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, \"Questions\"), this.state.questions.map(function (q, ind) {\n        return /*#__PURE__*/React.createElement(Question, {\n          key: q.id,\n          question: q.question,\n          answer: q.answer,\n          category: _this4.state.categories[q.category],\n          difficulty: q.difficulty,\n          questionAction: _this4.questionAction(q.id),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pagination-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, this.createPagination())));\n    }\n  }]);\n\n  return QuestionView;\n}(Component);\n\nexport default QuestionView;","map":{"version":3,"sources":["C:/Users/Apps/FSND-master/projects/git/starter/frontend/src/components/QuestionView.js"],"names":["React","Component","Question","Search","$","QuestionView","getQuestions","ajax","url","state","page","type","success","result","setState","questions","totalQuestions","total_questions","categories","currentCategory","current_category","error","alert","getByCategory","id","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","num","pageNumbers","maxPage","Math","ceil","i","push","selectPage","Object","keys","map","toLowerCase","q","ind","question","answer","category","difficulty","createPagination"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor(){\n    super();\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    }\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  selectPage(num) {\n    this.setState({page: num}, () => this.getQuestions());\n  }\n\n  createPagination(){\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10)\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {this.selectPage(i)}}>{i}\n        </span>)\n    }\n    return pageNumbers;\n  }\n\n  getByCategory= (id) => {\n    $.ajax({\n      url: `/categories/${id}/questions`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `/questions`, //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({searchTerm: searchTerm}),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  questionAction = (id) => (action) => {\n    if(action === 'DELETE') {\n      if(window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `/questions/${id}`, //TODO: update request URL\n          type: \"DELETE\",\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again')\n            return;\n          }\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"question-view\">\n        <div className=\"categories-list\">\n          <h2 onClick={() => {this.getQuestions()}}>Categories</h2>\n          <ul>\n            {Object.keys(this.state.categories).map((id, ) => (\n              <li key={id} onClick={() => {this.getByCategory(id)}}>\n                {this.state.categories[id]}\n                <img className=\"category\" src={`${this.state.categories[id].toLowerCase()}.svg`}/>\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch}/>\n        </div>\n        <div className=\"questions-list\">\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]} \n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className=\"pagination-menu\">\n            {this.createPagination()}\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n"]},"metadata":{},"sourceType":"module"}